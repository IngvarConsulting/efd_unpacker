name: Build and Release

on:
  push:
    tags:
      - 'v*'

# Add permissions for creating releases
permissions:
  contents: write
  packages: write

jobs:
  build-linux:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - name: Setup CI environment
        run: |
          make install-deps
      - name: Build Linux version
        run: |
          make build-linux
      - name: Upload Linux artifacts
        uses: actions/upload-artifact@v4
        with:
          name: linux-builds
          path: |
            dist/efd-unpacker-*-linux-portable.zip
            dist/efd-unpacker-*-linux-portable.tar.gz
            dist/efd-unpacker-*-linux.AppImage
            dist/efd-unpacker-*-linux*.deb
            dist/efd-unpacker-*-linux*.rpm

  build-windows:
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - name: Setup CI environment
        run: |
          make install-deps
      - name: Build Windows version
        run: |
          make build-windows
      - name: Upload Windows artifacts
        uses: actions/upload-artifact@v4
        with:
          name: windows-builds
          path: |
            dist/efd-unpacker-*-windows-portable.zip
            dist/efd-unpacker-*-windows.msi

  build-macos:
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - name: Setup CI environment
        run: |
          make install-deps
      - name: Build macOS version
        run: |
          make build-macos
      - name: Upload macOS artifacts
        uses: actions/upload-artifact@v4
        with:
          name: macos-builds
          path: |
            dist/efd-unpacker-*-macos-portable.zip
            dist/efd-unpacker-*-macos.dmg

  test-appimage:
    needs: build-linux
    runs-on: ubuntu-latest
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: linux-builds
      - name: Move AppImage to root
        run: |
          mv dist/*.AppImage ./efd_unpacker.AppImage
      - name: Test AppImage
        run: |
          chmod +x ./efd_unpacker.AppImage
          ./efd_unpacker.AppImage --help
          ./efd_unpacker.AppImage unpack tests/data/1cv8.efd

  test-deb:
    needs: build-linux
    runs-on: ubuntu-latest
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: linux-builds
      - name: Test DEB
        run: |
          sudo apt-get install -y $(find . -name '*.deb')
          ls -l /usr/bin /usr/local/bin || true
          efd_unpacker --help
          efd_unpacker unpack tests/data/1cv8.efd

  test-rpm:
    needs: build-linux
    runs-on: centos-latest
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: linux-builds
      - name: Test RPM
        run: |
          sudo dnf install -y $(find . -name '*.rpm')
          ls -l /usr/bin /usr/local/bin || true
          efd_unpacker --help
          efd_unpacker unpack tests/data/1cv8.efd 

  test-linux-portable:
    needs: build-linux
    runs-on: ubuntu-latest
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: linux-builds
      - name: Unpack portable ZIP
        run: |
          unzip $(find dist -name '*-linux-portable.zip') -d dist/test-portable
          mv dist/test-portable/efd_unpacker ./efd_unpacker
      - name: Test portable ZIP
        run: |
          ./efd_unpacker --help
          ./efd_unpacker unpack tests/data/1cv8.efd

  test-msi:
    needs: build-windows
    runs-on: windows-latest
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: windows-builds
      - name: Move MSI to root
        run: |
          mv dist/*.msi ./efd_unpacker.msi
      - name: Test MSI
        run: |
          msiexec /i ./efd_unpacker.msi /qn
          dir "C:\Program Files"; dir "C:\Program Files (x86)"; dir "C:\efd_unpacker" || exit 0
          efd_unpacker.exe --help
          efd_unpacker.exe unpack tests/data/1cv8.efd

  test-windows-portable:
    needs: build-windows
    runs-on: windows-latest
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: windows-builds
      - name: Unpack portable ZIP
        run: |
          powershell -Command "Expand-Archive -Path (Get-ChildItem -Recurse -Filter *-windows-portable.zip | Select-Object -First 1 -ExpandProperty FullName) -DestinationPath dist/test-portable"
          mv dist/test-portable/efd_unpacker.exe ./efd_unpacker.exe
      - name: Test portable ZIP
        run: |
          ./efd_unpacker.exe --help
          ./efd_unpacker.exe unpack tests/data/1cv8.efd

  test-dmg:
    needs: build-macos
    runs-on: macos-latest
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: macos-builds
      - name: Move DMG to root
        run: |
          mv dist/*.dmg ./efd_unpacker.dmg
      - name: Test DMG
        run: |
          hdiutil attach ./efd_unpacker.dmg
          ls -l "/Volumes/EFD Unpacker/"
          cp -R "/Volumes/EFD Unpacker/EFDUnpacker.app" /tmp/
          ls -l /tmp/EFDUnpacker.app/Contents/MacOS/
          /tmp/EFDUnpacker.app/Contents/MacOS/efd_unpacker --help
          /tmp/EFDUnpacker.app/Contents/MacOS/efd_unpacker unpack tests/data/1cv8.efd
          hdiutil detach "/Volumes/EFD Unpacker"

  test-macos-portable:
    needs: build-macos
    runs-on: macos-latest
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: macos-builds
      - name: Unpack portable ZIP
        run: |
          unzip $(find dist -name '*-macos-portable.zip') -d dist/test-portable
          mv dist/test-portable/efd_unpacker ./efd_unpacker
      - name: Test portable ZIP
        run: |
          ./efd_unpacker --help
          ./efd_unpacker unpack tests/data/1cv8.efd

  # create-release:
  #   needs: [build-linux, build-windows, build-macos]
  #   runs-on: ubuntu-latest
  #   if: startsWith(github.ref, 'refs/tags/')
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v4
  #       with:
  #         fetch-depth: 0  # Нужно для получения истории коммитов

  #     - name: Download all artifacts
  #       uses: actions/download-artifact@v4
  #       with:
  #         path: artifacts

  #     - name: Set up Python
  #       uses: actions/setup-python@v4
  #       with:
  #         python-version: '3.11'

  #     - name: Create version and generate release notes
  #       id: release_notes
  #       run: |
  #         make create-version
  #         make generate-release-notes
  #         echo "RELEASE_NOTES<<EOF" >> $GITHUB_OUTPUT
  #         cat release_notes.md >> $GITHUB_OUTPUT
  #         echo "EOF" >> $GITHUB_OUTPUT

  #     - name: Create Release
  #       uses: softprops/action-gh-release@v1
  #       with:
  #         tag_name: ${{ github.ref_name }}
  #         name: EFD Unpacker $(cat version.txt)
  #         body: ${{ steps.release_notes.outputs.RELEASE_NOTES }}
  #         draft: false
  #         prerelease: false
  #         files: |
  #           artifacts/linux-builds/*
  #           artifacts/windows-builds/*
  #           artifacts/macos-builds/*
